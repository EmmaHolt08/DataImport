# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./code/awesome-project 

    env: 
      DATABASE_URL: postgresql://testuser:testpassword@localhost/testdb

    services: 
      postgres:
        image: postgis/postgis:13-3.3 
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432 
        options: >- 
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13.5
      uses: actions/setup-python@v3
      with:
        python-version: "3.13.5"

    - name: Install Python C-extension dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libffi-dev build-essential

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest
